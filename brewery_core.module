<?php
/**
 * @file
 * Core module for brewery.seifts.us
 */

/**
 * Implements hook_menu()
 */
function brewery_core_menu() {
  $items = array();

  $items['logger/all'] = array(
    'title' => t('Last 60 minutes'),
    'page callback' => 'brewery_core_logger_all',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['logger/%'] = array(
    'title' => t('Logs by key'),
    'page callback' => 'brewery_core_logger_key',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_block_info()
 */
function brewery_core_block_info() {
  $blocks = array();


  $blocks['all-sensors'] = array(
    'info' => t('All Sensors'),
  );

  $blocks['brew-system-status'] = array(
    'info' => t('Beer Status'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function brewery_core_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'all-sensors':
      $block['title'] = t('All Sensors');
      $block['content'] = brewery_core_all_sensors_block();
      break;
    case 'brew-system-status':
      $block['title'] = t('Beer Status');
      $block['content'] = brewery_core_brew_system_status_block();
      break;
  }

  return $block;
}

function brewery_core_all_sensors_block() {
  $sensors = array();

  $query = db_select('node', 'n')
    ->fields('n', array('title'))
    ->condition('n.type', 'reading')
    ->condition('n.status', 1)
    ->distinct();
  $result = $query->execute();
  
  foreach ($result as $title) {
    $url = 'logger/' . $title->title;

    $class = '';
    if (current_path() == $url) {
      $class = 'active';
    }

    $sensors[] = array(
      'data' => l($title->title, $url),
      'class' => array($class)
    );
  }

  $block = array(
    'nav' => array(
      '#theme' => 'item_list',
      '#items' => $sensors,
      '#attributes' => array('class' => 'nav nav-pills nav-stacked')
    ),
  );

  return $block;
}

/**
 * Displays a block that has info about the currently active beer.
 *
 * Should look and see if there is a beer that's activitly fermentating
 * and display infromation about related content. Such as temperature
 * readings and if a relay is active.
 */
function brewery_core_brew_system_status_block() {
  return array(
    '#theme' => 'table',
    '#rows' => array(
      array(
        'data' => array('Brewing', l('India Pale Ale', '<front>'))
      ),
      array(
        'data' => array('Current Temp', 65.5),
        'class' => array('success')
      ),
      array(
        'data' => array('Relay 1', 'On'),
        'class' => array('success')
      ),
      array(
        'data' => array('Relay 2', 'Off'),
        'class' => array('warning')
      ),
      array(
        'data' => array('Relay 3', 'On'),
        'class' => array('success')
      ),
    )
  );
}

/**
 * Displays a page of all logs in the past hour.
 */
function brewery_core_logger_all() {

  drupal_set_title('Last 60 minutes');

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'reading')
    ->propertyCondition('status', 1)
    ->propertyOrderBy('created', 'DESC')
    ->range(0, 60);

  $result = $query->execute();
  $reading_nids = array_keys($result['node']);

  $readings = node_load_multiple($reading_nids);

  $rows = array();
  foreach ($readings as $reading) {
    $value_field = field_get_items('node', $reading, 'field_reading_value');
    $value = field_view_value('node', $reading, 'field_reading_value', $value_field[0]);

    $category_field = field_get_items('node', $reading, 'field_reading_category');
    $category = field_view_value('node', $reading, 'field_reading_category', $category_field[0]);

    $rows[] = array(
      l($reading->title, 'logger/' . $reading->title),
      format_date($reading->created, 'custom', 'd/m/Y h:i a'),
      render($value),
      render($category),
    );
  }

  $header = array('Sensor', 'Timestamp', 'Value', 'Category');
  return array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
    '#attributes' => array('class' => 'table table-hover'),
  );
}

/**
 * Displays a page of all logs for a given key.
 */
function brewery_core_logger_key($key = NULL) {
  drupal_set_title('Logs for sensor ' . $key);

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'reading')
    ->propertyCondition('status', 1)
    ->propertyCondition('title', $key)
    ->propertyOrderBy('created', 'DESC')
    ->range(0, 60);

  $result = $query->execute();
  $reading_nids = array_keys($result['node']);

  $readings = node_load_multiple($reading_nids);

  $rows = array();
  foreach ($readings as $reading) {
    $value_field = field_get_items('node', $reading, 'field_reading_value');
    $value = field_view_value('node', $reading, 'field_reading_value', $value_field[0]);

    $category_field = field_get_items('node', $reading, 'field_reading_category');
    $category = field_view_value('node', $reading, 'field_reading_category', $category_field[0]);

    $rows[] = array(
      format_date($reading->created, 'custom', 'l, d/m/Y h:i a'),
      render($value),
      render($category),
    );
  }

  $header = array('Timestamp', 'Value', 'Category');
  return array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows
  );
}

